trigger:
  batch: true

schedules:
  - cron: 'MM HH * * *' # Update cron string
    displayName: Nightly
    branches:
      include:
        - master # Update to default branch

variables:
  CI: true

pool:
  vmImage: ubuntu-latest

steps:
- checkout: none
- task: Cache@2
  displayName: Cache ccache
  inputs:
    key: '$(Agent.OS) | ccache | $(System.TeamProject) | $(PACKAGE) | $(Build.SourceVersion)'
    restoreKeys: |
      $(Agent.OS) | ccache | $(System.TeamProject) | $(PACKAGE)
      $(Agent.OS) | ccache | $(System.TeamProject)
      $(Agent.OS) | ccache
    path: $(HOME)/.ccache
- task: Cache@2
  displayName: Cache pip
  inputs:
    key: '$(Agent.OS) | pip | $(System.TeamProject) | $(PACKAGE) | $(Build.SourceVersion)'
    restoreKeys: |
      $(Agent.OS) | pip | $(System.TeamProject) | $(PACKAGE)
      $(Agent.OS) | pip | $(System.TeamProject)
      $(Agent.OS) | pip
    path: $(HOME)/.cache/pip
- task: Bash@3
  displayName: Get CI scripts
  inputs:
    targetType: inline
    script: |
      wget https://raw.githubusercontent.com/tue-robotics/tue-env/master/ci/install-package.sh
      wget https://raw.githubusercontent.com/tue-robotics/tue-env/master/ci/build-package.sh
      wget https://raw.githubusercontent.com/tue-robotics/tue-env/master/ci/test-package.sh
      wget https://raw.githubusercontent.com/tue-robotics/tue-env/master/ci/set-branch.sh
      echo "##vso[task.setvariable variable=package]${BUILD_REPOSITORY_NAME#*/}"
  condition: and(succeeded(), not(canceled()))
- task: Bash@3
  displayName: Set Branch
  inputs:
    targetType: inline
    script: |
      source ./set-branch.sh --branch=${SYSTEM_PULLREQUEST_TARGETBRANCH:-${BUILD_SOURCEBRANCH#refs/heads/}}
      echo "##vso[task.setvariable variable=BRANCH]$BRANCH"
  condition: and(succeeded(), not(canceled()))
- task: DownloadSecureFile@1 # Only when using SSH
  name: deployKey
  displayName: 'Download Deploy Key'
  inputs:
    secureFile: deploy_key
  condition: and(succeeded(), not(canceled()))
- task: Bash@3
  displayName: Install
  env:
    SSH_KNOWN_HOSTS: "github.com"  # Only when using SSH
  inputs:
    targetType: inline
    script: |
      # START SSH ONLY
      mkdir -p "${HOME}"/.ssh
      cp $(deployKey.secureFilePath) "${HOME}"/.ssh/ci_ssh_key
      if [[ -n "${SSH_KNOWN_HOSTS}" ]]
      then
        for host in ${SSH_KNOWN_HOSTS}
        do
          echo -e "\e[35m\e[1mssh-keyscan -t rsa -H \"${host}\" 2>&1 | tee -a ${HOME}/.ssh/known_hosts\e[0m"
          ssh-keyscan -t rsa -H "${host}" 2>&1 | tee -a "${HOME}"/.ssh/known_hosts
        done
      fi
      # END SSH ONLY
      bash install-package.sh --package=$PACKAGE --branch=$BRANCH --commit=$BUILD_SOURCEVERSION --pullrequest=${SYSTEM_PULLREQUEST_PULLREQUESTNUMBER:-false} --image="ghcr.io/tue-robotics/tue-env-ros-noetic" --ssh --ssh-key="${HOME}"/.ssh/ci_ssh_key  # Last two arguments only when using SSH
  condition: and(succeeded(), not(canceled()))
- task: Bash@3
  displayName: Build
  inputs:
    targetType: inline
    script: |
      bash build-package.sh --package=$PACKAGE
  condition: and(succeeded(), not(canceled()))
- task: Bash@3
  displayName: Test
  inputs:
    targetType: inline
    script: |
      bash test-package.sh --package=$PACKAGE
  condition: and(succeeded(), not(canceled()))
