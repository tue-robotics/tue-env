name: CI

on: [push, pull_request, workflow_dispatch]

jobs:
  linting:
    name: Linting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Python 3
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: Install Black
        run: pip install black
      - name: Shellcheck
        run: |
          shopt -s globstar
          shellcheck --version
          shellcheck **/*.bash **/*.sh
      - name: Python Black
        run: |
          black --version
          black -l 120 --check --diff --color .

  docker_generation_tue_env:
    name: Docker Generation tue-env
    runs-on: ubuntu-latest
    needs: linting
    steps:
      - uses: actions/checkout@v3
      - name: Docker info
        run: docker info
      - name: Script
        run: |
          GITHUB_REF=${GITHUB_REF#refs/heads/}
          GITHUB_REF=${GITHUB_REF#refs/tags/}
          BRANCH=${GITHUB_BASE_REF:-${GITHUB_REF}}
          PULLREQUEST=${{ github.event.number }}
          PULLREQUEST=${PULLREQUEST:-false}
          ci/build-docker-image.sh --image="tuerobotics/tue-env" --branch="${BRANCH}" --commit="$GITHUB_SHA" --pull_request="${PULLREQUEST}" --user="${{ secrets.DOCKER_HUB_USERNAME }}" --password="${{ secrets.DOCKER_HUB_PASSWORD }}"

  docker_generation_tue_env_cuda:
    name: Docker Generation tue-env-cuda
    runs-on: ubuntu-latest
    needs: linting
    if: ${{ github.event_name != 'pull_request' && github.ref == 'refs/heads/master' }}
    steps:
      - uses: actions/checkout@v3
      - name: Docker info
        run: docker info
      - name: Script
        run: |
          GITHUB_REF=${GITHUB_REF#refs/heads/}
          GITHUB_REF=${GITHUB_REF#refs/tags/}
          BRANCH=${GITHUB_BASE_REF:-${GITHUB_REF}}
          PULLREQUEST=${{ github.event.number }}
          PULLREQUEST=${PULLREQUEST:-false}
          ci/build-docker-image.sh --image="tuerobotics/tue-env-cuda" --branch="${BRANCH}" --commit="$GITHUB_SHA" --pull_request="${PULLREQUEST}" --user="${{ secrets.DOCKER_HUB_USERNAME }}" --password="${{ secrets.DOCKER_HUB_PASSWORD }}"
   
